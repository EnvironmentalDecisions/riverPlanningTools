// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// timesTwo
DataFrame timesTwo(DataFrame x, int connection_limit, int distance_limit, String df_id, String df_nxt, String df_len);
RcppExport SEXP _riverPlanningTools_timesTwo(SEXP xSEXP, SEXP connection_limitSEXP, SEXP distance_limitSEXP, SEXP df_idSEXP, SEXP df_nxtSEXP, SEXP df_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type connection_limit(connection_limitSEXP);
    Rcpp::traits::input_parameter< int >::type distance_limit(distance_limitSEXP);
    Rcpp::traits::input_parameter< String >::type df_id(df_idSEXP);
    Rcpp::traits::input_parameter< String >::type df_nxt(df_nxtSEXP);
    Rcpp::traits::input_parameter< String >::type df_len(df_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x, connection_limit, distance_limit, df_id, df_nxt, df_len));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_riverPlanningTools_timesTwo", (DL_FUNC) &_riverPlanningTools_timesTwo, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_riverPlanningTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
